2021-12-07 09:49:56 [32mINFO  (et: 0.000260 s)[0m[36m (func: load_csr) [0m [90mdirected_graph.cpp:20:[0m load graph in CSR from ../../dataset/soc-Epinions1/for_demo/
2021-12-07 09:49:56 [32mINFO  (et: 0.002449 s)[0m[36m (func: load_csr_degree_file) [0m [90mdirected_graph.cpp:98:[0m read degree file time: 0.001 seconds
2021-12-07 09:49:56 [32mINFO  (et: 0.002832 s)[0m[36m (func: load_csr_adj_file) [0m [90mdirected_graph.cpp:121:[0m malloc and sequential-scan time: 0.000 seconds
2021-12-07 09:49:56 [32mINFO  (et: 0.005497 s)[0m[36m (func: load_csr_adj_file) [0m [90mdirected_graph.cpp:134:[0m read adj file time: 0.002 seconds
2021-12-07 09:49:56 [32mINFO  (et: 0.007276 s)[0m[36m (func: load_csr_degree_file) [0m [90mdirected_graph.cpp:98:[0m read degree file time: 0.001 seconds
2021-12-07 09:49:56 [32mINFO  (et: 0.007610 s)[0m[36m (func: load_csr_adj_file) [0m [90mdirected_graph.cpp:121:[0m malloc and sequential-scan time: 0.000 seconds
2021-12-07 09:49:56 [32mINFO  (et: 0.010276 s)[0m[36m (func: load_csr_adj_file) [0m [90mdirected_graph.cpp:134:[0m read adj file time: 0.002 seconds
2021-12-07 09:49:56 [32mINFO  (et: 0.010308 s)[0m[36m (func: load_csr) [0m [90mdirected_graph.cpp:34:[0m load graph time: 0.009 seconds
2021-12-07 09:49:56 [32mINFO  (et: 0.011998 s)[0m[36m (func: print_metadata) [0m [90mdirected_graph.cpp:281:[0m graph metadata: num of vertices = 75888, num of edges = 508837, average degree = 13.41, max out degree = 1801, max in degree = 3035
2021-12-07 09:49:56 [32mINFO  (et: 0.012155 s)[0m[36m (func: print_metadata) [0m [90mdirected_graph.cpp:299:[0m out degree distribution: {[0,2), num = 44739}, {[2,4), num = 13175}, {[4,8), num = 7385}, {[8,16), num = 4186}, {[16,32), num = 2739}, {[32,64), num = 1981}, {[64,128), num = 1162}, {[128,256), num = 416}, {[256,512), num = 86}, {[512,1024), num = 15}, {[1024,2048), num = 4}, 
2021-12-07 09:49:56 [32mINFO  (et: 0.012249 s)[0m[36m (func: print_metadata) [0m [90mdirected_graph.cpp:316:[0m in degree distribution: {[0,2), num = 44739}, {[2,4), num = 13175}, {[4,8), num = 7385}, {[8,16), num = 4186}, {[16,32), num = 2739}, {[32,64), num = 1981}, {[64,128), num = 1162}, {[128,256), num = 416}, {[256,512), num = 86}, {[512,1024), num = 15}, {[1024,2048), num = 4}, {[0,2), num = 47960}, {[2,4), num = 13175}, {[4,8), num = 7385}, {[8,16), num = 4186}, {[16,32), num = 2739}, {[32,64), num = 1981}, {[64,128), num = 1162}, {[128,256), num = 416}, {[256,512), num = 86}, {[512,1024), num = 15}, {[1024,2048), num = 4}, {[2048,4096), num = 0}, 
==================
WARNING: ThreadSanitizer: heap-use-after-free (pid=3654734)
  Write of size 4 at 0x7b0800000078 by thread T1:
    #0 CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long) <null> (CycleEnumerator.out+0x2991d)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1d085)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 8 at 0x7b0800000078 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) <null> (CycleEnumerator.out+0x17b26)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 24 at 0x7b0800000060 allocated by thread T1:
    #0 realloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:681 (libtsan.so.0+0x32646)
    #1 <null> <null> (libgomp.so.1+0xc2ac)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: heap-use-after-free (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x2991d) in CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long)
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 4 at 0x7b0800000064 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c00c)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 4 at 0x7b0800000064 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c00c)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 24 at 0x7b0800000060 allocated by thread T1:
    #0 realloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:681 (libtsan.so.0+0x32646)
    #1 <null> <null> (libgomp.so.1+0xc2ac)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1c00c) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 8 at 0x7ffc3d514790 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c0e2)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 8 at 0x7ffc3d514790 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c102)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is stack of main thread.

  Location is global '<null>' at 0x000000000000 ([stack]+0x00000001f790)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1c0e2) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 4 at 0x7b0800000068 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c467)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 4 at 0x7b0800000068 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c467)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 24 at 0x7b0800000060 allocated by thread T1:
    #0 realloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:681 (libtsan.so.0+0x32646)
    #1 <null> <null> (libgomp.so.1+0xc2ac)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1c467) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 4 at 0x7b080000006c by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c887)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 4 at 0x7b080000006c by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c773)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 24 at 0x7b0800000060 allocated by thread T1:
    #0 realloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:681 (libtsan.so.0+0x32646)
    #1 <null> <null> (libgomp.so.1+0xc2ac)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1c887) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 1 at 0x7bc400014597 by thread T1:
    #0 CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long) <null> (CycleEnumerator.out+0x2959d)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1d085)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 1 at 0x7bc400014597 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c641)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x2959d) in CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long)
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 1 at 0x7bc400014597 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c892)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous read of size 1 at 0x7bc400014597 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ce5e)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1c892) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400014879 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ca5e)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 1 at 0x7bc400014879 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c472)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ca5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400014652 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ca5e)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 1 at 0x7bc400014652 by thread T1:
    #0 CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long) <null> (CycleEnumerator.out+0x2959d)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1d085)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ca5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 4 at 0x7b0800000070 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1cc97)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 4 at 0x7b0800000070 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1cc97)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 24 at 0x7b0800000060 allocated by thread T1:
    #0 realloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:681 (libtsan.so.0+0x32646)
    #1 <null> <null> (libgomp.so.1+0xc2ac)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1cc97) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400014391 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ce5e)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 8 at 0x7bc400014390 by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ce5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 4 at 0x7b0800000074 by thread T2:
    #0 CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long) <null> (CycleEnumerator.out+0x29576)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1d085)
    #2 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 4 at 0x7b0800000074 by thread T1:
    #0 CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long) <null> (CycleEnumerator.out+0x29576)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1d085)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 24 at 0x7b0800000060 allocated by thread T1:
    #0 realloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:681 (libtsan.so.0+0x32646)
    #1 <null> <null> (libgomp.so.1+0xc2ac)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x29576) in CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long)
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400015018 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ce5e)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 1 at 0x7bc400015018 by thread T1:
    #0 CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long) <null> (CycleEnumerator.out+0x2959d)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1d085)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ce5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400015017 by thread T2:
    #0 CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long) <null> (CycleEnumerator.out+0x2979f)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1d085)
    #2 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 1 at 0x7bc400015017 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1cca2)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x2979f) in CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long)
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc40001501c by thread T2:
    #0 CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long) <null> (CycleEnumerator.out+0x2979f)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1d085)
    #2 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 1 at 0x7bc40001501c by thread T1:
    #0 CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long) <null> (CycleEnumerator.out+0x2959d)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1d085)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x2979f) in CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long)
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400015002 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ce5e)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 1 at 0x7bc400015002 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1cca2)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ce5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400014685 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ce5e)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 1 at 0x7bc400014685 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c039)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ce5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc40001400d by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ca5e)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 8 at 0x7bc400014008 by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ca5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc40001621e by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ca5e)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 1 at 0x7bc40001621e by thread T2:
    #0 CycleEnumerator::dfs_on_bigraph(unsigned int, unsigned int, long) <null> (CycleEnumerator.out+0x2959d)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1d085)
    #2 <null> <null> (libgomp.so.1+0x1a78d)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ca5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400014a57 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ca5e)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 1 at 0x7bc400014a57 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c472)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ca5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc40001448c by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ca5e)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 1 at 0x7bc40001448c by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1cca2)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ca5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc4000145ec by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ca5e)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 1 at 0x7bc4000145ec by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1cca2)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ca5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400014570 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ca5e)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 1 at 0x7bc400014570 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c892)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1ca5e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400014207 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c641)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 8 at 0x7bc400014200 by thread T1:
    [failed to restore the stack]

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1c641) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc4000256d7 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c641)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Previous write of size 1 at 0x7bc4000256d7 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c892)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1c641) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc4000146dc by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c641)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 1 at 0x7bc4000146dc by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c892)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1c641) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc400018cf7 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c641)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 1 at 0x7bc400018cf7 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c472)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1c641) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 1 at 0x7bc4000209b2 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c225)
    #1 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 1 at 0x7bc4000209b2 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c039)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Location is heap block of size 75888 at 0x7bc400014000 allocated by thread T1:
    #0 calloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:668 (libtsan.so.0+0x305aa)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ba95)
    #2 GOMP_parallel <null> (libgomp.so.1+0x128e5)
    #3 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #4 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #5 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #6 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #7 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #9 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x1c225) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0]
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 8 at 0x7ffc3d514ae8 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) <null> (CycleEnumerator.out+0x17c85)
    #1 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #2 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #3 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #4 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #5 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #6 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #7 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 8 at 0x7ffc3d514ae8 by thread T2:
    [failed to restore the stack]

  Location is stack of main thread.

  Location is global '<null>' at 0x000000000000 ([stack]+0x00000001fae8)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x17c85) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int)
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 8 at 0x7ffc3d514af8 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) <null> (CycleEnumerator.out+0x17c91)
    #1 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #2 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #3 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #4 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #5 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #6 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #7 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 8 at 0x7ffc3d514af8 by thread T2:
    [failed to restore the stack]

  Location is stack of main thread.

  Location is global '<null>' at 0x000000000000 ([stack]+0x00000001faf8)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x17c91) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int)
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 8 at 0x7ffc3d514b08 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) <null> (CycleEnumerator.out+0x17c9e)
    #1 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #2 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #3 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #4 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #5 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #6 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #7 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 8 at 0x7ffc3d514b08 by thread T2:
    [failed to restore the stack]

  Location is stack of main thread.

  Location is global '<null>' at 0x000000000000 ([stack]+0x00000001fb08)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x17c9e) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int)
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Read of size 8 at 0x7ffc3d514b18 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) <null> (CycleEnumerator.out+0x17cb4)
    #1 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #2 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #3 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #4 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #5 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #6 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #7 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous write of size 8 at 0x7ffc3d514b18 by thread T2:
    [failed to restore the stack]

  Location is stack of main thread.

  Location is global '<null>' at 0x000000000000 ([stack]+0x00000001fb18)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x17cb4) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int)
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ffc3d514ac8 by thread T1:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) <null> (CycleEnumerator.out+0x17cc7)
    #1 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #2 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #3 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #4 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #5 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #6 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #7 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 8 at 0x7ffc3d514ac8 by thread T2:
    [failed to restore the stack]

  Location is stack of main thread.

  Location is global '<null>' at 0x000000000000 ([stack]+0x00000001fac8)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x17cc7) in CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int)
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ff82098d048 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x144cd)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7ff82098d048 by thread T2:
    [failed to restore the stack]

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x144cd) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ff82098d078 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x144cd)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7ff82098d078 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1bd61)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x144cd) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ffc3d514ba8 by thread T1:
    #0 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x144d5)
    #1 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #2 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #3 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #4 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #5 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #6 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #7 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 8 at 0x7ffc3d514ba8 by thread T2:
    [failed to restore the stack]

  Location is stack of main thread.

  Location is global '<null>' at 0x000000000000 ([stack]+0x00000001fba8)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x144d5) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ff90326d038 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x144fb)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7ff90326d038 by thread T2:
    [failed to restore the stack]

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x144fb) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ff90326d1b8 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x144fb)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7ff90326d1b8 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c50b)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x144fb) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ff90326d360 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x144fb)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7ff90326d364 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c0a9)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x144fb) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ff90326d378 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x144fb)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7ff90326d37c by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c0c8)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x144fb) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ffc3d514ba0 by thread T1:
    #0 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14503)
    #1 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #2 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #3 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #4 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #5 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #6 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #7 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 8 at 0x7ffc3d514ba0 by thread T2:
    [failed to restore the stack]

  Location is stack of main thread.

  Location is global '<null>' at 0x000000000000 ([stack]+0x00000001fba0)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14503) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7b1800003cd8 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14599)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7b1800003cd8 by thread T2:
    [failed to restore the stack]

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14599) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7bac00379000 by thread T1:
    #0 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x145a1)
    #1 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #2 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #3 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #4 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #5 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #6 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #7 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 8 at 0x7bac00379000 by thread T2:
    [failed to restore the stack]

  Location is heap block of size 24600 at 0x7bac00379000 allocated by thread T1:
    #0 malloc ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:651 (libtsan.so.0+0x30323)
    #1 spp::sparse_hashtable<std::pair<unsigned int const, unsigned int>, unsigned int, spp::spp_hash<unsigned int>, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SelectKey, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SetKey, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::sparse_hashtable(spp::sparse_hashtable<std::pair<unsigned int const, unsigned int>, unsigned int, spp::spp_hash<unsigned int>, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SelectKey, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SetKey, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::MoveDontCopyT, spp::sparse_hashtable<std::pair<unsigned int const, unsigned int>, unsigned int, spp::spp_hash<unsigned int>, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SelectKey, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SetKey, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >&, unsigned long) <null> (CycleEnumerator.out+0x2722b)
    #2 std::pair<unsigned int const, unsigned int>& spp::sparse_hashtable<std::pair<unsigned int const, unsigned int>, unsigned int, spp::spp_hash<unsigned int>, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SelectKey, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SetKey, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::find_or_insert<spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::DefaultValue, unsigned int&>(unsigned int&) <null> (CycleEnumerator.out+0x288d6)
    #3 CycleEnumerator::fast_build_bigraph() <null> (CycleEnumerator.out+0x1ae39)
    #4 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x22177)
    #5 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #6 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #7 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #8 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #9 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #10 <null> <null> (libstdc++.so.6+0xd6de3)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x145a1) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7b2400000140 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14599)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7b2400000140 by thread T2:
    #0 std::pair<unsigned int const, unsigned int>& spp::sparse_hashtable<std::pair<unsigned int const, unsigned int>, unsigned int, spp::spp_hash<unsigned int>, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SelectKey, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SetKey, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::find_or_insert<spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::DefaultValue, unsigned int&>(unsigned int&) <null> (CycleEnumerator.out+0x27fbc)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c8d4)
    #2 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14599) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7b20002c6860 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14599)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7b20002c6864 by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c8e0)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14599) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7b1800007200 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14599)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7b1800007200 by thread T2:
    #0 std::pair<unsigned int const, unsigned int>& spp::sparse_hashtable<std::pair<unsigned int const, unsigned int>, unsigned int, spp::spp_hash<unsigned int>, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SelectKey, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SetKey, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::find_or_insert<spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::DefaultValue, unsigned int&>(unsigned int&) <null> (CycleEnumerator.out+0x27fbc)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c4b4)
    #2 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14599) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7b2c000002e8 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14599)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7b2c000002ec by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c4c0)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14599) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7b2800000950 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14599)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7b2800000950 by thread T2:
    #0 std::pair<unsigned int const, unsigned int>& spp::sparse_hashtable<std::pair<unsigned int const, unsigned int>, unsigned int, spp::spp_hash<unsigned int>, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SelectKey, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SetKey, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::find_or_insert<spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::DefaultValue, unsigned int&>(unsigned int&) <null> (CycleEnumerator.out+0x27fbc)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1cce4)
    #2 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14599) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7b2800000958 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14599)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7b280000095c by thread T2:
    #0 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1ccf0)
    #1 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14599) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7b20002c75c0 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14599)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7b20002c75c0 by thread T2:
    #0 std::pair<unsigned int const, unsigned int>& spp::sparse_hashtable<std::pair<unsigned int const, unsigned int>, unsigned int, spp::spp_hash<unsigned int>, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SelectKey, spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::SetKey, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::find_or_insert<spp::sparse_hash_map<unsigned int, unsigned int, spp::spp_hash<unsigned int>, std::equal_to<unsigned int>, spp::libc_allocator<std::pair<unsigned int const, unsigned int> > >::DefaultValue, unsigned int&>(unsigned int&) <null> (CycleEnumerator.out+0x27fbc)
    #1 CycleEnumerator::parallel_dfs(DirectedGraph*, unsigned int, unsigned int) [clone ._omp_fn.0] <null> (CycleEnumerator.out+0x1c067)
    #2 <null> <null> (libgomp.so.1+0x1a78d)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14599) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7bac00379008 by thread T1:
    #0 free ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:707 (libtsan.so.0+0x35f25)
    #1 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14aaf)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 4 at 0x7bac00379008 by thread T2:
    [failed to restore the stack]

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14aaf) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ffc3d514b78 by thread T1:
    #0 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14aca)
    #1 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #2 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #3 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #4 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #5 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #6 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #7 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 8 at 0x7ffc3d514b78 by thread T2:
    [failed to restore the stack]

  Location is stack of main thread.

  Location is global '<null>' at 0x000000000000 ([stack]+0x00000001fb78)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14aca) in CycleEnumerator::clear_bigraph()
==================
==================
WARNING: ThreadSanitizer: data race (pid=3654734)
  Write of size 8 at 0x7ffc3d514b88 by thread T1:
    #0 CycleEnumerator::clear_bigraph() <null> (CycleEnumerator.out+0x14600)
    #1 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e8)
    #2 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #3 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #4 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #5 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #6 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #7 <null> <null> (libstdc++.so.6+0xd6de3)

  Previous read of size 8 at 0x7ffc3d514b88 by thread T2:
    [failed to restore the stack]

  Location is stack of main thread.

  Location is global '<null>' at 0x000000000000 ([stack]+0x00000001fb88)

  Thread T1 (tid=3654838, running) created by main thread at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xd70a8)
    #2 main <null> (CycleEnumerator.out+0x9881)

  Thread T2 (tid=3654839, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:962 (libtsan.so.0+0x5ea79)
    #1 <null> <null> (libgomp.so.1+0x1adea)
    #2 CycleEnumerator::execute(DirectedGraph*, unsigned int, unsigned int, CycleEnumerator::query_method) <null> (CycleEnumerator.out+0x221e0)
    #3 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<unsigned long>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long> >::_M_invoke(std::_Any_data const&) <null> (CycleEnumerator.out+0xcd01)
    #4 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) <null> (CycleEnumerator.out+0xe5eb)
    #5 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() <null> (CycleEnumerator.out+0xe1db)
    #6 pthread_once ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1442 (libtsan.so.0+0x41964)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}> >, unsigned long>::_Async_state_impl(std::tuple<execute_within_time_limit(DirectedGraph*, CycleEnumerator*, unsigned int, unsigned int, CycleEnumerator::query_method, unsigned long)::{lambda()#1}>&&)::{lambda()#1}> > >::_M_run() <null> (CycleEnumerator.out+0xd91f)
    #8 <null> <null> (libstdc++.so.6+0xd6de3)

SUMMARY: ThreadSanitizer: data race (/home/shiwenlan/test/parallel3/build/cycle/CycleEnumerator.out+0x14600) in CycleEnumerator::clear_bigraph()
==================
ThreadSanitizer:DEADLYSIGNAL
==3654734==ERROR: ThreadSanitizer: SEGV on unknown address (pc 0x7ff904e97ec7 bp 0x7b30005d6780 sp 0x7ff821593260 T3654838)
==3654734==The signal is caused by a READ memory access.
==3654734==Hint: this fault was caused by a dereference of a high value address (see register values below).  Dissassemble the provided pc to learn which register was used.
    #0 <null> <null> (libgomp.so.1+0x1bec7)
    #1 __nptl_deallocate_tsd /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:301 (libpthread.so.0+0x85a0)
    #2 __nptl_deallocate_tsd /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:256 (libpthread.so.0+0x9629)
    #3 start_thread /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:488 (libpthread.so.0+0x9629)
    #4 __clone <null> (libc.so.6+0x122292)

ThreadSanitizer can not provide additional info.
SUMMARY: ThreadSanitizer: SEGV (/lib/x86_64-linux-gnu/libgomp.so.1+0x1bec7) 
==3654734==ABORTING
